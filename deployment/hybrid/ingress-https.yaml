apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: kortix-backend
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    # 同时监听 HTTP 和 HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    # 使用 ACM 颁发的 api.consciousness.systems 证书
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:706929238717:certificate/2a65c55e-9ec3-417b-bd6b-51dbad0acdfe
    # 使用最新的 SSL 策略
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
    # 强制重定向 HTTP 到 HTTPS
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    # 支持 WebSocket 和长连接
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
    # 粘性会话配置（确保 WebSocket 连接到同一个后端）
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=86400
    # 健康检查配置
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-api-service
            port:
              number: 80
---
# 保持原有的 Service，但改为 ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: backend-api-service
  namespace: kortix-backend
spec:
  type: ClusterIP  # 通过 Ingress 暴露，不直接暴露
  selector:
    app: backend-api
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP